<h1>☆網際內容管理★</h1>
<p><img alt="" height="391" src="/images/1234.png" width="453"/></p>
<h4><span>網際內容管理</span></h4>
<h5><strong>2019 Spring 課程目標</strong></h5>
<h5>讓學員得以利用全球資訊網發表與 (精密) 機械 (設計) 相關的內容, 並進行有效管理.</h5>
<h5><br/><span>內容發表: Google Blogger, Github Pages</span><br/><br/><span>有效管理: 透過 API 程式整合兩者之間的內容, 包括 CMSimfly, Reveal 與 Pelican Blog 與 Blogger</span></h5>
<h1>介紹</h1>
<h5><strong>2019 Spring 課程目標</strong></h5>
<h5>讓學員得以利用全球資訊網發表與 (精密) 機械 (設計) 相關的內容, 並進行有效管理.</h5>
<h5><br/><span>內容發表: Google Blogger, Github Pages</span><br/><br/><span>有效管理: 透過 API 程式整合兩者之間的內容, 包括 CMSimfly, Reveal 與 Pelican Blog 與 Blogger</span></h5><h2>git add</h2>
<h4><span>可以用來新增一個檔案, 數個檔案, 或在之前提交後所新增的所有內容.</span></h4>
<h4><span>在 GIT 架構下, 是對所新增或修改的內容拍快照。<br/><br/></span></h4>
<h2>git commit</h2>
<h4><span>執行之前, 必須使用 git config 建立臨時或永久的身分註記, 因為 GIT 在展開所有改版內容時, 必須明確登錄這些變更的作者與時間.<br/><span>當使用者採用 git commit -m "改版說明訊息", 此次提交到 .git 目錄下的更動內容, 均會綁定使用者身分與改版所輸入的說明訊息.</span><br/></span></h4>
<h2>git push</h2>
<h4><span><span>在隨後沒有輸入遠端 URL 代號時, 表示要推送到 origin, 若透過 git remote add 設定其他代號與 URL 對應時, git push 加上代號, 就可以將此次的提交內容, 推送到指定的 URL 所在遠端倉儲.</span></span></h4>
<p></p>
<h1>網路連線設定</h1>
<p><span>了解機械設計系電腦輔助設計室電腦的網路設定, 其中包括 IPv4 網路與 IPv6 網路設定.</span><span>正常情況下, 電腦輔助設計室中的 64 台電腦透過 IPv4 協定下的 DHCP 與 NAT 上網, 各電腦以 DHCP client 取得 192.168.1.* 的網路位址, 然後以 NAT 的一組外部 IP 上網, 通常必須設定 Proxy Server 為 http://proxy.kmol.info:3128 後上網會比較順暢, 但若 8 台 Proxy Servers 無法正常運作時, 則取消 Proxy Server 的設定.<br/><br/><span>瀏覽器代理主機設定</span><br/><br/><span>了解如何設定 Google Chrome 與 Firefox 瀏覽器的代理主機設定.</span><br/></span></p>
<p><span><span>可以利用"命令提示字元"輸入<b>ipconfig"</b>它的主要功用，包括用來顯示現時網路連線的設定（/all參數），或透過/release參數來釋放取得的ip位置，和透過/renew 來重新獲取ip位置的分配。</span></span></p>
<p><span><span><img alt="" height="216" src="/images/chrome_btm9ZrdFdm.png" width="400"/></span></span></p>
<p><br/><br/><img alt="" height="321" src="/images/explorer_UITFw7HX7h.png" width="600"/></p>
<p><span><span></span></span></p><h2>chrome proxy</h2>
<p><span>正常情況下, 電腦輔助設計室中的 64 台電腦透過 IPv4 協定下的 DHCP 與 NAT 上網, 各電腦以 DHCP client 取得 192.168.1.* 的網路位址, 然後以 NAT 的一組外部 IP 上網, 通常必須設定 Proxy Server 為 http://proxy.kmol.info:3128 後上網會比較順暢, 但若 8 台 Proxy Servers 無法正常運作時, 則取消 Proxy Server 的設定</span></p>
<p><img alt="" height="519" src="/images/rundll32_w9vJQp0NqB.png" width="800"/></p>
<p>proxy位置:140.130.17.3 連接阜:3128</p>
<p><span><span></span></span></p><h1>配置可攜程式環境</h1>
<p><span>取得 Windows 10 64 位元環境下的可攜程式環境 (下載  2019_cdb_w5.7z), 下載後解開目錄, 放入 USB3.0 規格以上的隨身碟或隨身硬碟.</span><br/><br/><span>以滑鼠點擊 start.bat 開啟可攜隨身系統, 以 stop.bat 關閉可攜隨身系統, <strong>隨身碟必須在關閉所有應用程式執行下, 才可正常退出.</strong></span><br/><br/><span>了解基本的 DOS (Disk Operating System) 指令</span><br/><br/><span>C:\&gt; 符號為 DOS 命令列視窗的回應 , 表示目前在 C 槽硬碟的 \ 根目錄, 若要切換到 Y 槽, 則在電腦的回應後, 輸入 Y:, 命令列將轉為</span><span>Y:\&gt;</span><br/><br/><span>若要<strong>更換目錄</strong>, 則使用<strong> cd</strong>,例如:<strong> </strong></span><strong>Y:\&gt;cd tmp</strong><br/><br/><span>表示要從 Y 槽的根目錄更換到 tmp 目錄, 也就是 </span><span>Y:\tmp&gt;</span><br/><br/><span>若要再回到 Y 槽的根目錄, 可以使用 cd ..</span><br/><br/><span>表示要從目前所在目錄, 往上跳回一個目錄, 也就是重新回到 Y 槽的根目錄.</span><br/><br/><span>另外, 無論目前位於哪一個子目錄, 也可以使用 cd \</span><br/><br/><span>直接回到根目錄.</span><br/><br/><span>或者從<strong> Y:\&gt; 直接使用</strong></span><br/><br/><strong>cd \tmp\repo\ssh\wcm2019</strong><br/><br/><span>直接從 Y 槽的根目錄, 跳進 Y:\tmp\repo\ssh\wcm2019&gt;</span><br/><br/><span>此外, 常用的 DOS 指令有:</span><br/><br/><span><strong>dir</strong> - 列出目前所在目錄的內容</span><br/><br/><span><strong>mkdir</strong> - 隨後加上要建立目錄的名稱, 可以建立目錄</span></p>
<p><span><strong>cls</strong> -清除目前的命令列顯示的內容</span></p>
<p><span><span></span></span></p>
<p><span></span></p>
<p><span style="color: #000000; background-color: #ff0000;"></span></p>
<p></p><h1>倉儲</h1>
<p>倉儲</p><h2>倉儲建立</h2>
<p><strong>進入github-點右方選項建立新的倉儲，(倉儲姓名及設定好之後即可建立)</strong></p>
<p><span style="color: #ff0000;"><strong>initialize this repository with a README 記得打勾</strong></span></p>
<p><img alt="" height="334" src="/images/chrome_Djbm9qov1t.png" width="400"/></p>
<p><img alt="" height="264" src="/images/chrome_hp2fmMoCl1.png" width="400"/></p>
<p><img alt="" height="71" src="/images/chrome_in6Iufw7Or.png" width="400"/></p>
<p>打開倉儲後打開設置並滑到Github pages</p>
<p><img alt="" height="60" src="/images/ShareX_yn2GWRnoeC.png" width="400"/></p>
<p>將選項改至master branch</p>
<p><img alt="" height="231" src="/images/ShareX_v3YSR4EmD4.png" width="400"/></p>
<p><span>啟用後GitHub Pages預設會伺服根目錄下的index.html</span></p><h2>倉儲改版</h2>
<p><span style="color: #000000; background-color: #ff0000;">指令解釋</span></p>
<p><strong><span style="color: #ff0000;">git add</span><span> </span>:把已修改的檔案增加暫存區, 可以加單一檔案也可以使用 . 增加所有檔案.</strong></p>
<p><strong><span style="color: #ff0000;">git commit -m</span><span> </span>"提交訊息"  用來將暫存區的檔案加到.git目錄下.</strong></p>
<p><strong><span style="color: #ff0000;">git push</span><span> </span>:將提交的內容推到遠端倉儲加上 -f 會強制push覆蓋掉遠端資料 </strong></p>
<p><strong><span style="color: #ff0000;">git pull</span><span> </span>:將遠端較新的資料拉回近端合併, 當push的時候有提示遠端的版本更新時, 請先拉後推, 不要直接使用-f.</strong></p>
<p><span style="background-color: #ffff99;">首先先輸入cd 2019wcmj 隨後再打python wsgi.py  複製https://127.0.0.1:9443/</span><img alt="" height="220" src="/images/cmd_8KBRwvRBy9.png" width="421"/></p>
<p><span style="background-color: #ffff99;">進到網頁登錄密碼:admin後便可以開始進行改版</span></p>
<p><img alt="" height="261" src="/images/chrome_loiyqNFP8r.png" width="415"/></p>
<p><span style="background-color: #ffff99;">改版完成後再透過git  add . git commit -m"" git push</span></p><h2>上傳youtube影片</h2>
<p>豪哥二度上場,不料第一球跨步上籃馬上被打了一個大火鍋</p>
<p></p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/N-ojN0TGwkg" width="560"></iframe></p>
<p><span>1.選想要放入的影片</span></p>
<p><span>2.點選下方分享並點擊"&lt;&gt;"圖案</span></p>
<p><span><img alt="" height="189" src="/images/chrome_NWYMW8lcLH.png" width="449"/></span></p>
<p><span><img alt="" height="214" src="/images/chrome_TZMAL0Yqc2.png" width="400"/></span></p>
<p>3.複製原始碼</p>
<p><span><img alt="" height="165" src="/images/chrome_kY1Gc6g0Na.png" width="443"/></span></p>
<p><span>4</span>.複製原始碼並貼上倉儲嵌入原始碼處</p>
<p><span><img alt="" height="292" src="/images/chrome_lSqakEeG2Q.png" width="449"/></span></p>
<p></p><h1>SSL-VPN服務教學</h1>
<p><span><strong>1. 首次使用須先安裝SSL VPN 程式(Juniper Networks Connect)</strong></span></p>
<p><span>(1)請依您的作業系統版本下載使用者端程式：<a href="https://drive.narlabs.org.tw/navigate/s/8F663EC143514CF295FCB53B5B228956GUY">https://drive.narlabs.org.tw/navigate/s/8F663EC143514CF295FCB53B5B228956GUY</a></span></p>
<p>(2)程式下載完成後，點擊兩下開始安裝。</p>
<p><img alt="" height="305" src="/images/123.png" width="501"/></p>
<p><strong>2.進行身份驗證(可由Juniper Network Connect或IE，請擇一進行身分認證)</strong></p>
<p><strong><img alt="" height="393" src="/images/explorer_cGQmURQIsw.png" width="241"/></strong></p>
<p><strong><span>執行程式後，於"登入頁面"輸入網址 : </span><a href="https://sslvpn.nfu.edu.tw/nfu">https://sslvpn9.twaren.net/nfu</a><span><span> </span>，後按下"執行"</span></strong></p>
<p><strong><span><img alt="" height="364" src="/images/dsNetworkConnect_BGX8STi0kC.png" width="400"/></span></strong></p>
<p><strong><span></span></strong></p>
<p><strong><span>3.輸入使用者帳號密碼，請填入校務行政AD帳號及密碼。請完整填寫您在校務行政AD帳號以及密碼，否則國網中心找不到對象進行身份確認 </span></strong></p>
<p><strong><span></span></strong></p>
<p><strong><span>4.出現"設定控制-警告"視窗，按下"是"</span></strong><strong><span><img alt="" height="436" src="/images/chrome_3xcb4pP9Pn.png" width="391"/></span></strong></p>
<p><strong><span></span></strong></p>
<p><strong><span>   5.螢幕右下角顯示"已連接"，表示已成功連線。</span></strong></p>
<p><strong><span><img alt="" height="175" src="/images/wtP2PQu2hd.png" width="362"/></span></strong></p>
<div><span>2-2: IE網認證</span></div>
<blockquote>
<div><span>1.請在IE瀏覽器上按下右鍵 使用"以系統管理員身分執行"</span></div>
<div><span>登入頁面請輸入： <a href="https://sslvpn9.twaren.net/nfu">https://sslvpn9.twaren.net/nfu</a>，按下「執行」，會出現帳號與密碼登入欄位。</span><br/><span>請填入虎尾科技大學的校務行政AD帳號及密碼，並請輸入下方驗證碼，進行身份確認。</span><br/><span><span><span>請完整填寫您在虎尾科技大學的校務行政AD帳號以及密碼</span></span>，否則國網中心找不到對象進行身份確認！</span></div>
<div><span>(例:<span><span> 員工編號或學號@ctx10.nfu.edu.tw</span></span>）</span><br/><span>填寫完畢以後按下Login登入就會開始進行身份確認，請稍後一段時間。</span></div>
<div><span></span></div>
<div><span><img alt="1" src="https://nfucc.nfu.edu.tw./../images/image/sslvpn/Web/1.jpg"/></span></div>
<div><span></span></div>
<div><span><img alt="2" height="493" src="https://nfucc.nfu.edu.tw./../images/image/sslvpn/Web/2.JPG" width="800"/></span></div>
<div><span></span></div>
<div><span>2.點選「開始」 </span></div>
<div><span><img alt="3" height="493" src="https://nfucc.nfu.edu.tw./../images/image/sslvpn/Web/3.jpg" width="800"/></span></div>
<div><span>3.點選「是」，SSL VPN程式安裝完畢後，就會開始跟你的電腦建立連線，請稍後一段時間。</span></div>
<div>
<p><span><img alt="5" height="493" src="https://nfucc.nfu.edu.tw./../images/image/sslvpn/Web/5.jpg" width="800"/></span></p>
</div>
</blockquote>
<div><hr size="2" width="100%"/></div>
<div><span><strong> </strong></span></div>
<blockquote>
<div><span> <strong>5. </strong><strong>VPN</strong><strong>連線建立完成</strong></span></div>
</blockquote>
<blockquote><span>連線建立完成後，在電腦的工作列上(桌面右下角)，會出現 Juniper Network Connect VPN Client的圖示，表示VPN連線已經成功的建立在你的電腦上了。點擊圖示兩下，即可查看連線資訊。<span>(註:指派IP:一定為120.113.100.XX)</span>。</span><br/><span>到此，您的SSL-VPN連線已經成功的建立，不管是在家裡還是出差，您的電腦就像在學校使用一般，您可以自由的使用虎尾科技大學自己擁有的網路資源。</span>
<div><span><img alt="153.png" src="https://nfucc.nfu.edu.tw./../images/153.png"/></span></div>
</blockquote>
<div><hr size="2" width="100%"/></div>
<div><span><strong>6. </strong><strong>連線IP檢視</strong>(*)</span></div>
<blockquote>
<div><span>如何得知連線的 IP 究竟是什麼呢？您可透過網際網路上提供 IP 位址偵測服務的網站進行確認，例如 <a href="http://showip.net/" target="_blank" title="Show IP"><span>http://showip.net/</span></a></span></div>
<div><span><img alt="15313.png" src="https://nfucc.nfu.edu.tw./../images/15313.png"/></span></div>
<h1>校園授權軟體</h1>
<p>學校電算中心網站-下載專區</p>
<p>網址:<a href="https://nfucc.nfu.edu.tw/zh/download">https://nfucc.nfu.edu.tw/zh/download</a> </p>
<p>登入學生帳戶後即可到此網頁，可點選自己想要安裝的軟體</p>
<p>但是<span color="#ff0000" style="color: #ff0000;"><span style="color: #ff0000;">下載軟體限定校園IP</span></span></p>
<p><img alt="" height="216" src="/images/校園授權網站1.png" width="400"/></p>
<h1>virtualbox</h1>
<p>到ubuntu網站下載Sever</p>
<p>ubuntu網站:<a href="https://www.ubuntu.com/">https://www.ubuntu.com/</a></p>
<p><img alt="" height="315" src="/images/chrome_e7MJlDvTbm.png" width="400"/></p>
<p><span>1.建立 Ubuntu 18.04 虛擬主機</span></p>
<p><img alt="" height="326" src="/images/VirtualBox_iekaHmEdBS.png" width="400"/></p>
<p><img alt="" height="326" src="/images/VirtualBox_Kq2i03YdGi.png" width="400"/></p>
<p><img alt="" height="456" src="/images/VirtualBox_fmC2DnkgCK.png" width="400"/></p>
<p><img alt="" height="448" src="/images/VirtualBox_1yP2u8YKew.png" width="439"/></p>
<p><img alt="" height="390" src="/images/VirtualBox_SqVuiZZj4p.png" width="382"/></p>
<p><span>3. 以網路卡橋接啟動 Ubuntu </span><br/><img alt="" height="269" src="/images/VirtualBox_7Q7mK4kZM3.png" width="400"/></p>
<p><img alt="" height="125" src="/images/explorer_5ofGCyHjcZ.png" width="400"/></p>
<p></p>
<p><img alt="" height="335" src="/images/1.png" width="400"/></p>
<p><img alt="" height="334" src="/images/2.png" width="400"/></p>
<p><img alt="" height="336" src="/images/3.png" width="400"/></p>
<p><img alt="" height="336" src="/images/4.png" width="400"/></p>
<p><img alt="" height="336" src="/images/5.png" width="400"/></p>
<p><img alt="" height="336" src="/images/6.png" width="400"/></p>
<p><img alt="" height="336" src="/images/7.png" width="400"/></p>
<p><img alt="" height="336" src="/images/8.png" width="400"/></p>
<p><img alt="" height="336" src="/images/9.png" width="400"/></p>
<p><img alt="" height="334" src="/images/10.png" width="398"/></p>
<p><img alt="" height="336" src="/images/12.png" width="400"/></p>
<p></p>
<p><span>以<strong> ifconfig</strong> 查 Ubuntu 伺服器的 IP, 測試 nginx 伺服器是否可以連線</span></p>
<p></p>
<p><span>提醒:如果要關機要打指令<span>sudo halt</span></span></p>
<p><strong>輸入 sudo apt install nginx 安裝 nginx WWW 伺服器</strong></p>
<p></p>
<p><span>以 Windows 10  下的 Filezilla client, 將編輯好的 nginx 設定檔案送到 Ubuntu</span></p>
<p></p>
<p></p><h1>ubuntu開啟網站</h1>
<p><span>啟動，並輸入ifconfig查詢虛擬主機IP位址</span></p>
<p><span color="#FF0000">到瀏覽器輸入網址，有以下三種</span></p>
<p><span color="#FF0000"><span style="color: #ff0000;">http</span>://"虛擬主機IP"，進到個人<span style="color: #ff0000;">靜態</span>網站</span></p>
<p><span color="#FF0000"><span><span style="color: #ff0000;">https</span>://"虛擬主機IP"，進到個人<span style="color: #ff0000;">動態</span>網站</span></span></p><h1>第一個 圖片</h1>
<p>學習如何一次上傳多個圖檔, 並且學會如何引用, 並且設定圖片大小.</p>
<p><img alt="" height="450" src="/images/w5.png" width="800"/></p>
<p><span>開啟已下載完成的cd2019_cdb_w5資料夾並啟動</span><br/><span>輸入cd tmp</span><br/><span>cd 2019wcmj</span><br/><span>python wsgi.py</span><br><span>複製網址並開啟即可進入自己的CMSimfly管理網頁</span><br/><span>登入密碼:admin即可登入並且進行編輯</span></br></p>
<p><span>上傳圖片後能調整自己照片的大小編輯完,透過git add . git commit -m"" git push完成改版</span></p>
<h1>第二個 骰子遊戲</h1>
<p></p>
<script>// <![CDATA[
var cwidth = 400;
    var cheight = 300;
    var dicex = 50;
    var dicey = 50;
    var dicewidth = 100;
    var diceheight = 100;
    var dotrad = 6;
    var ctx;
    var dx;
    var dy;
    var firstturn = true;
    var point;
function throwdice() {
    var sum;
    var ch = 1+Math.floor(Math.random()*6);
    sum = ch;
    dx = dicex;
    dy = dicey;
    drawface(ch);
    dx = dicex + 150;
    ch=1 + Math.floor(Math.random()*6);
    sum += ch;
    drawface(ch);
    if (firstturn) {
        switch(sum) {
            case 7:
            case 11:
              document.f.outcome.value="You win!";
              break;
            case 2:
            case 3:
            case 12:
              document.f.outcome.value="You lose!";
              break;
            default:
              point = sum;
              document.f.pv.value=point;
              firstturn = false;
              document.f.stage.value="Need follow-up throw.";
              document.f.outcome.value="   ";
        }
    }
    else {
        switch(sum) {
        case point:
           document.f.outcome.value="You win!";
           document.f.stage.value="Back to first throw.";
           document.f.pv.value=" ";
           firstturn = true;
           break;
        case 7:
           document.f.outcome.value="You lose!";
           document.f.stage.value="Back to first throw.";
           document.f.pv.value=" ";
           firstturn = true;
        }
            }
}
function drawface(n) {
  ctx = document.getElementById('canvas').getContext('2d');  
  ctx.lineWidth = 5;
  ctx.clearRect(dx,dy,dicewidth,diceheight);
  ctx.strokeRect(dx,dy,dicewidth,diceheight)
  var dotx;
  var doty;
  ctx.fillStyle = "#009966";
    switch(n) {
        case 1:
         draw1();
         break;
        case 2:
         draw2();
         break;
        case 3:
         draw2();
         draw1();
         break;
        case 4:
         draw4();
         break;
        case 5:
         draw4();
         draw1();
         break;
        case 6:
         draw4();
         draw2mid();
         break;
         
    }
}
function draw1() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + .5*dicewidth;
    doty = dy + .5*diceheight;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
function draw2() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+diceheight-3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
function draw4() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+diceheight-3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + diceheight-3*dotrad;  //no change
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+ 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill(); 
}
function draw2mid() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + .5*diceheight;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy + .5*diceheight; //no change
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
// ]]></script>
<p><canvas height="300" id="canvas" width="400"> Your browser doesn't support the HTML5 element canvas. </canvas> <br/> <button onclick="throwdice();">Throw dice </button></p>
<form id="f" name="f">Stage: <input name="stage" type="text" value="First Throw"/> Point: <input name="pv" type="text" value="   "/> Outcome: <input name="outcome" type="text" value="     "/></form>
<h1>第三個 亂數系統</h1>
<p></p>
<p>網路與電腦程式只是工具, 任何人希望與遠端的系統或成員溝通, 可以使用網路.</p>
<p>任何人想要利用電腦的能力解決問題, 就必須學會編寫電腦程式, 與電腦溝通.</p>
<p><button onclick="myFunction()">Try it</button></p>
<p id="demo"></p>
<script>// <![CDATA[
function myFunction() {
  document.getElementById("demo").innerHTML = Math.floor(Math.random()*10);
}
// ]]></script>
<!-- 導入 Brython 標準程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<p></p>
<!-- 啟動 Brython -->
<p>
<script>// <![CDATA[
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
// ]]></script>
</p>
<p><canvas height="400" id="plotarea" width="600"></canvas></p>
<p>
<script type="text/python">// <![CDATA[
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["plotarea"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/4
circle_y = flag_h/4
# 先畫滿地紅
ctx.fillStyle='rgb(255, 0, 0)'
ctx.fillRect(0,0,flag_w,flag_h)
# 再畫青天
ctx.fillStyle='rgb(0, 0, 150)'
ctx.fillRect(0,0,flag_w/2,flag_h/2)
# 畫十二道光芒白日
ctx.beginPath()
star_radius = flag_w/8
angle = 0
for i in range(24):
    angle += 5*math.pi*2/12
    toX = circle_x + math.cos(angle)*star_radius
    toY = circle_y + math.sin(angle)*star_radius
    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
    if (i):
        ctx.lineTo(toX, toY)
    else:
        ctx.moveTo(toX, toY)
ctx.closePath()
# 將填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
# 白日:藍圈
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)
ctx.closePath()
# 填色設為藍色
ctx.fillStyle = 'rgb(0, 0, 149)'
ctx.fill()
# 白日:白心
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)
ctx.closePath()
# 填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
// ]]></script>
</p>
<p><br/>繪圖 &lt;&lt; <a href="/get_page/%E7%AC%AC%E5%9B%9B%E5%80%8BROC%E5%9C%8B%E6%97%97/繪圖.html">Previous</a> <a href="/get_page/%E7%AC%AC%E5%9B%9B%E5%80%8BROC%E5%9C%8B%E6%97%97/Spur Gears.html">Next</a> &gt;&gt; Spur Gears</p>
<!-- footer -->
<div class="container">
<div class="row pt-3 mx-auto">
<p><!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. --> Copyright ©
<script>// <![CDATA[
document.write(new Date().getFullYear());
// ]]></script>
All rights reserved | This template is made with <i aria-hidden="true" class="icon-heart"></i> by <a href="https://colorlib.com" target="_blank">Colorlib</a> <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. --></p>
</div>
</div>
<!-- for footer -->
<p></p>
<!-- for site wrap -->
<p></p>
<!-- <script src="/static/chimper/js/jquery-3.3.1.min.js"></script> -->
<p>
<script src="/static/chimper/js/jquery-migrate-3.0.1.min.js"></script>
<script src="/static/chimper/js/jquery-ui.js"></script>
<script src="/static/chimper/js/popper.min.js"></script>
<script src="/static/chimper/js/bootstrap.min.js"></script>
<script src="/static/chimper/js/owl.carousel.min.js"></script>
<script src="/static/chimper/js/jquery.stellar.min.js"></script>
<script src="/static/chimper/js/jquery.countdown.min.js"></script>
<script src="/static/chimper/js/jquery.magnific-popup.min.js"></script>
<script src="/static/chimper/js/bootstrap-datepicker.min.js"></script>
<script src="/static/chimper/js/aos.js"></script>
</p>
<!--
            <script src="/static/chimper/js/typed.js"></script>
                    <script>
                    var typed = new Typed('.typed-words', {
                    strings: ["Web Apps"," WordPress"," Mobile Apps"],
                    typeSpeed: 80,
                    backSpeed: 80,
                    backDelay: 4000,
                    startDelay: 1000,
                    loop: true,
                    showCursor: true
                    });
                    </script>
            -->
<p>
<script src="/static/chimper/js/main.js"></script>
</p>
<h1>第四個ROC國旗</h1>
<p><span>需更改自己倉儲內的flaskapp.py檔才能顯示國旗</span></p>
<p><span>以下是需更改的程式碼：</span></p>
<p><strong><span><span><span>def savePage（）的修改</span></span></span></strong></p>
<div>
<div class="syntaxhighlighter html" id="highlighter_141351">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2"><span><span>1</span></span></div>
<div class="line number2 index1 alt1"><span><span>2</span></span></div>
<div class="line number3 index2 alt2"><span><span>3</span></span></div>
<div class="line number4 index3 alt1"><span><span>4</span></span></div>
<div class="line number5 index4 alt2"><span><span>五</span></span></div>
<div class="line number6 index5 alt1"><span><span>6</span></span></div>
<div class="line number7 index6 alt2"><span><span>7</span></span></div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">def savePage():</code></div>
<div class="line number2 index1 alt1"><code class="html spaces">    </code><code class="html plain">"""save all pages function"""</code></div>
<div class="line number3 index2 alt2"><code class="html spaces">    </code><code class="html plain">page_content = request.form['page_content']</code></div>
<div class="line number4 index3 alt1"><code class="html spaces">    </code><code class="html plain"># when element_format : "html", need to remove the annoying comment to prevent brython exec</code></div>
<div class="line number5 index4 alt2"><code class="html spaces">    </code><code class="html plain">page_content = [w.replace('// </code><code class="html color2">&lt;![CDATA[', '') for w in page_content]</code></div>
<div class="line number6 index5 alt1"><code class="html spaces">    </code><code class="html color2">page_content = [w.replace('// ]]&gt;</code><code class="html plain">', '') for w in page_content]</code></div>
<div class="line number7 index6 alt2"><code class="html spaces">    </code><code class="html plain"># check if administrator</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><strong><span><span><span>def ssavePage（）的修改</span></span></span></strong></p>
<div>
<div class="syntaxhighlighter html" id="highlighter_586738">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2"><span><span>1</span></span></div>
<div class="line number2 index1 alt1"><span><span>2</span></span></div>
<div class="line number3 index2 alt2"><span><span>3</span></span></div>
<div class="line number4 index3 alt1"><span><span>4</span></span></div>
<div class="line number5 index4 alt2"><span><span>五</span></span></div>
<div class="line number6 index5 alt1"><span><span>6</span></span></div>
<div class="line number7 index6 alt2"><span><span>7</span></span></div>
<div class="line number8 index7 alt1"><span><span>8</span></span></div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">def ssavePage():</code></div>
<div class="line number2 index1 alt1"><code class="html spaces">    </code><code class="html plain">"""seperate save page function"""</code></div>
<div class="line number3 index2 alt2"><code class="html spaces">    </code><code class="html plain">page_content = request.form['page_content']</code></div>
<div class="line number4 index3 alt1"><code class="html spaces">    </code><code class="html plain"># when element_format : "html", need to remove the annoying comment to prevent brython exec</code></div>
<div class="line number5 index4 alt2"><code class="html spaces">    </code><code class="html plain">page_content = page_content.replace('// </code><code class="html color2">&lt;![CDATA[', '')</code></div>
<div class="line number6 index5 alt1"><code class="html spaces">    </code><code class="html color2">page_content = page_content.replace('// ]]&gt;</code><code class="html plain">', '')</code></div>
<div class="line number7 index6 alt2"><code class="html spaces">    </code><code class="html plain">page_order = request.form['page_order']</code></div>
<div class="line number8 index7 alt1"><code class="html spaces">    </code><code class="html plain">if not isAdmin():</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<!-- 導入 Brython 標準程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<p></p>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
</script>
<p><canvas height="400" id="plotarea" width="600"></canvas></p>
<script type="text/python">
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["plotarea"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/4
circle_y = flag_h/4
# 先畫滿地紅
ctx.fillStyle='rgb(255, 0, 0)'
ctx.fillRect(0,0,flag_w,flag_h)
# 再畫青天
ctx.fillStyle='rgb(0, 0, 150)'
ctx.fillRect(0,0,flag_w/2,flag_h/2)
# 畫十二道光芒白日
ctx.beginPath()
star_radius = flag_w/8
angle = 0
for i in range(24):
    angle += 5*math.pi*2/12
    toX = circle_x + math.cos(angle)*star_radius
    toY = circle_y + math.sin(angle)*star_radius
    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
    if (i):
        ctx.lineTo(toX, toY)
    else:
        ctx.moveTo(toX, toY)
ctx.closePath()
# 將填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
# 白日:藍圈
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)
ctx.closePath()
# 填色設為藍色
ctx.fillStyle = 'rgb(0, 0, 149)'
ctx.fill()
# 白日:白心
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)
ctx.closePath()
# 填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
</script>
<p><canvas height="400" id="plotarea2" width="600"></canvas></p>
<script type="text/python">
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["plotarea2"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/4
circle_y = flag_h/4
# 先畫滿地紅
ctx.fillStyle='rgb(100, 200, 180)'
ctx.fillRect(0,0,flag_w,flag_h)
# 再畫青天
ctx.fillStyle='rgb(100,69, 150)'
ctx.fillRect(0,0,flag_w/2,flag_h/2)
# 畫十二道光芒白日
ctx.beginPath()
star_radius = flag_w/8
angle = 0
for i in range(24):
    angle += 5*math.pi*2/12
    toX = circle_x + math.cos(angle)*star_radius
    toY = circle_y + math.sin(angle)*star_radius
    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
    if (i):
        ctx.lineTo(toX, toY)
    else:
        ctx.moveTo(toX, toY)
ctx.closePath()
# 將填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
# 白日:藍圈
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)
ctx.closePath()
# 填色設為藍色
ctx.fillStyle = 'rgb(50, 100,20)'
ctx.fill()
# 白日:白心
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)
ctx.closePath()
# 填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
</script>
<div class="line number1 index0 alt2"><code class="html comments">&lt;!-- 導入 Brython 標準程式庫 --&gt;</code></div>
<div class="line number2 index1 alt1"><code class="html plain">&lt;</code><code class="html keyword">script</code> <code class="html color1">src</code><code class="html plain">=</code><code class="html string">"./../static/brython.js"</code><code class="html plain">&gt;&lt;/</code><code class="html keyword">script</code><code class="html plain">&gt;</code></div>
<div class="line number3 index2 alt2"><code class="html plain">&lt;</code><code class="html keyword">script</code> <code class="html color1">src</code><code class="html plain">=</code><code class="html string">"./../static/brython_stdlib.js"</code><code class="html plain">&gt;&lt;/</code><code class="html keyword">script</code><code class="html plain">&gt;</code></div>
<div class="line number4 index3 alt1"><code class="html plain">&lt;</code><code class="html keyword">p</code><code class="html plain">&gt;&lt;/</code><code class="html keyword">p</code><code class="html plain">&gt;</code></div>
<div class="line number5 index4 alt2"><code class="html comments">&lt;!-- 啟動 Brython --&gt;</code></div>
<div class="line number6 index5 alt1"><code class="html plain">&lt;</code><code class="html keyword">script</code><code class="html plain">&gt;// </code><code class="html color2">&lt;![CDATA[</code></div>
<div class="line number7 index6 alt2"><code class="html color2">window.onload=function(){</code></div>
<div class="line number8 index7 alt1"><code class="html color2">// 設定 data/py 為共用程式路徑</code></div>
<div class="line number9 index8 alt2"><code class="html color2">brython({debug:1, pythonpath:['./../data/py']});</code></div>
<div class="line number10 index9 alt1"><code class="html color2">}</code></div>
<div class="line number11 index10 alt2"><code class="html color2">// ]]&gt;</code><code class="html plain">&lt;/</code><code class="html keyword">script</code><code class="html plain">&gt;</code></div>
<div class="line number12 index11 alt1"><code class="html plain">&lt;</code><code class="html keyword">p</code><code class="html plain">&gt;&lt;</code><code class="html keyword">canvas</code> <code class="html color1">height</code><code class="html plain">=</code><code class="html string">"400"</code> <code class="html color1">id</code><code class="html plain">=</code><code class="html string">"plotarea"</code> <code class="html color1">width</code><code class="html plain">=</code><code class="html string">"600"</code><code class="html plain">&gt;&lt;/</code><code class="html keyword">canvas</code><code class="html plain">&gt;&lt;/</code><code class="html keyword">p</code><code class="html plain">&gt;</code></div>
<div class="line number13 index12 alt2"><code class="html plain">&lt;</code><code class="html keyword">script</code> <code class="html color1">type</code><code class="html plain">=</code><code class="html string">"text/python"</code><code class="html plain">&gt;// </code><code class="html color2">&lt;![CDATA[</code></div>
<div class="line number14 index13 alt1"><code class="html color2"># 導入 doc</code></div>
<div class="line number15 index14 alt2"><code class="html color2">from browser import document as doc</code></div>
<div class="line number16 index15 alt1"><code class="html color2">import math</code></div>
<div class="line number17 index16 alt2"> </div>
<div class="line number18 index17 alt1"><code class="html color2"># 準備繪圖畫布</code></div>
<div class="line number19 index18 alt2"><code class="html color2">canvas = doc["plotarea"]</code></div>
<div class="line number20 index19 alt1"><code class="html color2">ctx = canvas.getContext("2d")</code></div>
<div class="line number21 index20 alt2"><code class="html color2"># 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點</code></div>
<div class="line number22 index21 alt1"><code class="html color2"># ctx.setTransform(1, 0, 0, -1, 0, canvas.height)</code></div>
<div class="line number23 index22 alt2"><code class="html color2"># 以下採用 canvas 原始座標繪圖</code></div>
<div class="line number24 index23 alt1"><code class="html color2">flag_w = canvas.width</code></div>
<div class="line number25 index24 alt2"><code class="html color2">flag_h = canvas.height</code></div>
<div class="line number26 index25 alt1"><code class="html color2">circle_x = flag_w/4</code></div>
<div class="line number27 index26 alt2"><code class="html color2">circle_y = flag_h/4</code></div>
<div class="line number28 index27 alt1"><code class="html color2"># 先畫滿地紅</code></div>
<div class="line number29 index28 alt2"><code class="html color2">ctx.fillStyle='rgb(255, 0, 0)'</code></div>
<div class="line number30 index29 alt1"><code class="html color2">ctx.fillRect(0,0,flag_w,flag_h)</code></div>
<div class="line number31 index30 alt2"><code class="html color2"># 再畫青天</code></div>
<div class="line number32 index31 alt1"><code class="html color2">ctx.fillStyle='rgb(0, 0, 150)'</code></div>
<div class="line number33 index32 alt2"><code class="html color2">ctx.fillRect(0,0,flag_w/2,flag_h/2)</code></div>
<div class="line number34 index33 alt1"><code class="html color2"># 畫十二道光芒白日</code></div>
<div class="line number35 index34 alt2"><code class="html color2">ctx.beginPath()</code></div>
<div class="line number36 index35 alt1"><code class="html color2">star_radius = flag_w/8</code></div>
<div class="line number37 index36 alt2"><code class="html color2">angle = 0</code></div>
<div class="line number38 index37 alt1"><code class="html color2">for i in range(24):</code></div>
<div class="line number39 index38 alt2"><code class="html spaces">    </code><code class="html color2">angle += 5*math.pi*2/12</code></div>
<div class="line number40 index39 alt1"><code class="html spaces">    </code><code class="html color2">toX = circle_x + math.cos(angle)*star_radius</code></div>
<div class="line number41 index40 alt2"><code class="html spaces">    </code><code class="html color2">toY = circle_y + math.sin(angle)*star_radius</code></div>
<div class="line number42 index41 alt1"><code class="html spaces">    </code><code class="html color2"># 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo</code></div>
<div class="line number43 index42 alt2"><code class="html spaces">    </code><code class="html color2">if (i):</code></div>
<div class="line number44 index43 alt1"><code class="html spaces">        </code><code class="html color2">ctx.lineTo(toX, toY)</code></div>
<div class="line number45 index44 alt2"><code class="html spaces">    </code><code class="html color2">else:</code></div>
<div class="line number46 index45 alt1"><code class="html spaces">        </code><code class="html color2">ctx.moveTo(toX, toY)</code></div>
<div class="line number47 index46 alt2"><code class="html color2">ctx.closePath()</code></div>
<div class="line number48 index47 alt1"><code class="html color2"># 將填色設為白色</code></div>
<div class="line number49 index48 alt2"><code class="html color2">ctx.fillStyle = '#fff'</code></div>
<div class="line number50 index49 alt1"><code class="html color2">ctx.fill()</code></div>
<div class="line number51 index50 alt2"><code class="html color2"># 白日:藍圈</code></div>
<div class="line number52 index51 alt1"><code class="html color2">ctx.beginPath()</code></div>
<div class="line number53 index52 alt2"><code class="html color2">ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)</code></div>
<div class="line number54 index53 alt1"><code class="html color2">ctx.closePath()</code></div>
<div class="line number55 index54 alt2"><code class="html color2"># 填色設為藍色</code></div>
<div class="line number56 index55 alt1"><code class="html color2">ctx.fillStyle = 'rgb(0, 0, 149)'</code></div>
<div class="line number57 index56 alt2"><code class="html color2">ctx.fill()</code></div>
<div class="line number58 index57 alt1"><code class="html color2"># 白日:白心</code></div>
<div class="line number59 index58 alt2"><code class="html color2">ctx.beginPath()</code></div>
<div class="line number60 index59 alt1"><code class="html color2">ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)</code></div>
<div class="line number61 index60 alt2"><code class="html color2">ctx.closePath()</code></div>
<div class="line number62 index61 alt1"><code class="html color2"># 填色設為白色</code></div>
<div class="line number63 index62 alt2"><code class="html color2">ctx.fillStyle = '#fff'</code></div>
<div class="line number64 index63 alt1"><code class="html color2">ctx.fill()</code></div>
<div class="line number65 index64 alt2"><code class="html color2">// ]]&gt;</code><code class="html plain">&lt;/</code><code class="html keyword">script</code><code class="html plain">&gt;</code></div>
<h1>第五個3D物件</h1>
<p><br/><br/><br/><br/><br/></p>
<p><iframe height="900" src="/static/viewstl.html?src=/downloads/3d.stl.stl" width="900"><iframe></iframe></iframe></p>
<h2>3D成品</h2>
<p></p>
<p></p>
<p><iframe height="900" src="/static/viewstl.html?src=/downloads/22.stl%20(2).stl" width="900"><iframe></iframe></iframe></p>
<p><iframe height="900" src="/static/viewstl.html?src=/downloads/3d.stl.stl" width="900"><iframe></iframe></iframe></p><h2>作法</h2>
<p>1.先做出自己想要的物件</p>
<p><img alt="" height="271" src="/images/solvespace_6Co6THkmdX.png" width="443"/></p>
<p>2.存檔後轉檔成Ascii Stereolithography(.stl)</p>
<p><img alt="" height="341" src="/images/chrome_vbgJ1SIg8X.png" width="444"/></p>
<p>3.上傳至自己的動態網頁(File upload)然後於(File list) 開啟檔案便複製後段網址</p>
<p><img alt="" height="124" src="/images/chrome_BumsSCv72n.png" width="316"/></p>
<p><img alt="" height="53" src="/images/chrome_F17RuDB9n9.png" width="530"/></p>
<p>4.打入&lt;p&gt;&lt;iframe width="900" height="900" src="/static/viewstl.html?src=/downloads/3d.stl.stl"&gt;&lt;iframe&gt;&lt;/iframe&gt;&lt;/iframe&gt;&lt;/p&gt;</p>
<p>存檔後即完成</p>
<p><img alt="" height="163" src="/images/chrome_TUnZIJeQ83.png" width="466"/></p><h1>示範影片</h1>
<h2>如何建立倉儲</h2>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/lPJGzHdpIOw" width="560"></iframe></p>
<h2>啟用 Github Pages 與 CMSimfly</h2>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/RFVWE1i4Cew" width="560"></iframe></p>
<h2>Clone Github 倉儲</h2>
<p><span>以 scrum-1 帳號為例, 若採 ssh clone 倉儲, 需要先設定對應權限.<br/><br/><br/><span>從<span> </span></span><a href="https://github.com/scrum-1/cd2019">https://github.com/scrum-1/cd2019</a><span><span> </span>倉儲中對應的 clone or downloads 中 Clone with SSH, 所列出的 URL 為:</span><br/><br/><span>    git@github.com:scrum-1/cd2019.git</span><br/><br/><span>表示將以 git 帳號, 登入 github.com 主機, 進入 scrum-1 帳號中對應的 cd2019 倉儲, 若直接 git clone 此一倉儲, 則指令為:</span><br/><br/><span>    git clone git@github.com:scrum-1/cd2019.git</span><br/><br/><span>特別注意, 其中的 github.com 為網站符號名稱, 意思是所採用的 ssh 將利用 @ 前方的 git 當作帳號, 並且將採用 ssh 協定登入 github.com 網站.</span><br/><br/><span>假如, 使用者所採用的可攜程式套件, 只在 home 目錄下的 .ssh 目錄登記一個 private key, 使用者就可以直接在 home/.ssh/config 中,將 github.com 當作 Host 代號, 並對應到 Hostname 為 github.com 作為連線的網站名稱.</span><br/><br/><span>但是, 若使用者所使用的可攜程式套件, 登錄一個以上的 private keys 時, 就必須透過一個以上不同的 Host 名稱加以區別, 以便導引 ssh 協定至不同區段, 以不同的 private key 對應 Github 上不同帳號下所登錄的 public key.</span><br/></span></p>
<h2>建立 OpenSSH 格式的 Private 與 Public Keys</h2>
<p><span>接下來, 在可攜系統的命令列視窗中, 以 sh 執行 Git 的 shell, 使用</span><br/><br/><br/><span>建立金鑰命令:ssh-keygen -t rsa -b 4096 -C "註解"</span><br/><br/><span>建立位於 y:\home\.ssh\id_rsa 的 Private Key 與位於 y:\home\.ssh\id_rsa.pub 的 Public Key, 並且將 id_rsa.pub 的內容, 轉貼到 Github 帳號 settings 中 SSH and GPG keys 項目內的 SSH Public Key 區.</span><br/><br/><br/><span>使用 ssh 協定執行 git clone</span><br/><br/><br/><span>為了採用 OpenSSH 協定執行登入認證, 使用者在近端 git clone 倉儲時, 必須使用類似 git@github.com:帳號/倉儲.git 的連線 URL</span></p>
<p><br/><br/><br/><br/><span></span></p>
<!-- for site wrap -->
<p></p>
<!-- <script src="../static/chimper/js/jquery-3.3.1.min.js"></script> -->
<script src="/static/chimper/js/jquery-migrate-3.0.1.min.js"></script>
<script src="/static/chimper/js/jquery-ui.js"></script>
<script src="/static/chimper/js/popper.min.js"></script>
<script src="/static/chimper/js/bootstrap.min.js"></script>
<script src="/static/chimper/js/owl.carousel.min.js"></script>
<script src="/static/chimper/js/jquery.stellar.min.js"></script>
<script src="/static/chimper/js/jquery.countdown.min.js"></script>
<script src="/static/chimper/js/jquery.magnific-popup.min.js"></script>
<script src="/static/chimper/js/bootstrap-datepicker.min.js"></script>
<script src="/static/chimper/js/aos.js"></script>
<!--
            <script src="/static/chimper/js/typed.js"></script>
                    <script>
                    var typed = new Typed('.typed-words', {
                    strings: ["Web Apps"," WordPress"," Mobile Apps"],
                    typeSpeed: 80,
                    backSpeed: 80,
                    backDelay: 4000,
                    startDelay: 1000,
                    loop: true,
                    showCursor: true
                    });
                    </script>
            -->
<script src="/static/chimper/js/main.js"></script><h1>期中報告影片</h1>
<p>介紹第一到八周網際內容管理所做的成果影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/FoWnv9dvsnQ" width="560"></iframe></p>
<p>第1-8周主要教學網站:網際內容管理網誌、2019 Spring網際內容管理</p>
<p>電腦初學者的網際內容管理(1-8周上課目標)</p>
<p>1.了解網路連線設定</p>
<p>2.下載可攜式環境(2019_cdb_w5.7z)</p>
<p>3.建立github倉儲，並理解改版時指令的用意(git add .、git commit -m ""、git push)</p>
<p>4.利用CMSimfly內容，建立自己的Github Pages網站</p>
<p>5.學習如何使用CMSimfly，在網站中加入內容，並進行改版</p>
<p>示範如何開啟網站<br/>開啟已下載完成的cd2019_cdb_w5資料夾並啟動<br/>輸入cd tmp<br/>cd 2019wcmj<br/>python wsgi.py<br/>複製網址並開啟即可進入自己的CMSimfly管理網頁<br/>登入密碼:admin即可登入並且進行編輯<br/>&lt;產生亂數1-51&gt;就是示範在網頁裡新增內容 透過輸入程式碼及文字可以新增內容<br/>新增完內容後可點擊右上角選項generate_pages轉為靜態網頁</p>
<p>並且牢記每次經過新增內容後必須利用指令進行改版(git add .、git commit -m ""、git push)<br/>透過登入github可以看到自己的網頁過去改版新增的內容</p></blockquote>