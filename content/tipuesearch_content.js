var tipuesearch = {"pages": [{'title': '☆網際內容管理★', 'text': '\n 網際內容管理 \n 2019 Spring 課程目標 \n 讓學員得以利用全球資訊網發表與 (精密) 機械 (設計) 相關的內容, 並進行有效管理. \n 內容發表: Google Blogger, Github Pages 有效管理: 透過 API 程式整合兩者之間的內容, 包括 CMSimfly, Reveal 與 Pelican Blog 與 Blogger \n', 'tags': '', 'url': '☆網際內容管理★.html'}, {'title': '介紹', 'text': '2019 Spring 課程目標 \n 讓學員得以利用全球資訊網發表與 (精密) 機械 (設計) 相關的內容, 並進行有效管理. \n 內容發表: Google Blogger, Github Pages 有效管理: 透過 API 程式整合兩者之間的內容, 包括 CMSimfly, Reveal 與 Pelican Blog 與 Blogger', 'tags': '', 'url': '介紹.html'}, {'title': 'git add', 'text': '可以用來新增一個檔案, 數個檔案, 或在之前提交後所新增的所有內容. \n 在 GIT 架構下, 是對所新增或修改的內容拍快照。 \n', 'tags': '', 'url': 'git add.html'}, {'title': 'git commit', 'text': '執行之前, 必須使用 git config 建立臨時或永久的身分註記, 因為 GIT 在展開所有改版內容時, 必須明確登錄這些變更的作者與時間. 當使用者採用 git commit -m "改版說明訊息", 此次提交到 .git 目錄下的更動內容, 均會綁定使用者身分與改版所輸入的說明訊息. \n', 'tags': '', 'url': 'git commit.html'}, {'title': 'git push', 'text': '在隨後沒有輸入遠端 URL 代號時, 表示要推送到 origin, 若透過 git remote add 設定其他代號與 URL 對應時, git push 加上代號, 就可以將此次的提交內容, 推送到指定的 URL 所在遠端倉儲. \n \n', 'tags': '', 'url': 'git push.html'}, {'title': '網路連線設定', 'text': '了解機械設計系電腦輔助設計室電腦的網路設定, 其中包括 IPv4 網路與 IPv6 網路設定. 正常情況下, 電腦輔助設計室中的 64 台電腦透過 IPv4 協定下的 DHCP 與 NAT 上網, 各電腦以 DHCP client 取得 192.168.1.* 的網路位址, 然後以 NAT 的一組外部 IP 上網, 通常必須設定 Proxy Server 為 http://proxy.kmol.info:3128 後上網會比較順暢, 但若 8 台 Proxy Servers 無法正常運作時, 則取消 Proxy Server 的設定. 瀏覽器代理主機設定 了解如何設定 Google Chrome 與 Firefox 瀏覽器的代理主機設定. \n 可以利用"命令提示字元"輸入 ipconfig" 它的主要功用，包括用來顯示現時網路連線的設定（/all參數），或透過/release參數來釋放取得的ip位置，和透過/renew 來重新獲取ip位置的分配。 \n \n \n', 'tags': '', 'url': '網路連線設定.html'}, {'title': 'chrome proxy', 'text': '正常情況下, 電腦輔助設計室中的 64 台電腦透過 IPv4 協定下的 DHCP 與 NAT 上網, 各電腦以 DHCP client 取得 192.168.1.* 的網路位址, 然後以 NAT 的一組外部 IP 上網, 通常必須設定 Proxy Server 為 http://proxy.kmol.info:3128 後上網會比較順暢, 但若 8 台 Proxy Servers 無法正常運作時, 則取消 Proxy Server 的設定 \n \n proxy位置:140.130.17.3 連接阜:3128 \n', 'tags': '', 'url': 'chrome proxy.html'}, {'title': '配置可攜程式環境', 'text': '取得 Windows 10 64 位元環境下的可攜程式環境 (下載\xa0 2019_cdb_w5.7z), 下載後解開目錄, 放入 USB3.0 規格以上的隨身碟或隨身硬碟. 以滑鼠點擊 start.bat 開啟可攜隨身系統, 以 stop.bat 關閉可攜隨身系統,  隨身碟必須在關閉所有應用程式執行下, 才可正常退出. 了解基本的 DOS (Disk Operating System) 指令 C:\\> 符號為 DOS 命令列視窗的回應 , 表示目前在 C 槽硬碟的 \\ 根目錄, 若要切換到 Y 槽, 則在電腦的回應後, 輸入 Y:, 命令列將轉為 Y:\\> 若要 更換目錄 , 則使用  cd ,例如: \xa0 Y:\\>cd tmp 表示要從 Y 槽的根目錄更換到 tmp 目錄, 也就是\xa0 Y:\\tmp> 若要再回到 Y 槽的根目錄, 可以使用 cd .. 表示要從目前所在目錄, 往上跳回一個目錄, 也就是重新回到 Y 槽的根目錄. 另外, 無論目前位於哪一個子目錄, 也可以使用 cd \\ 直接回到根目錄. 或者從  Y:\\> 直接使用 cd \\tmp\\repo\\ssh\\wcm2019 直接從 Y 槽的根目錄, 跳進 Y:\\tmp\\repo\\ssh\\wcm2019> 此外, 常用的 DOS 指令有: dir  - 列出目前所在目錄的內容 mkdir \xa0- 隨後加上要建立目錄的名稱, 可以建立目錄 \n cls \xa0-清除目前的命令列顯示的內容 \n \n \n \n', 'tags': '', 'url': '配置可攜程式環境.html'}, {'title': '倉儲', 'text': '倉儲', 'tags': '', 'url': '倉儲.html'}, {'title': '倉儲建立', 'text': '進入github-點右方選項建立新的倉儲，(倉儲姓名及設定好之後即可建立) \n initialize this repository with a README 記得打勾 \n \n \n \n 打開倉儲後打開設置並滑到Github pages \n \n 將選項改至master branch \n \n 啟用後GitHub Pages預設會伺服根目錄下的index.html', 'tags': '', 'url': '倉儲建立.html'}, {'title': '倉儲改版', 'text': '指令解釋 \n git add \xa0 :把已修改的檔案增加暫存區, 可以加單一檔案也可以使用 . 增加所有檔案. \n git commit -m \xa0 "提交訊息"\xa0 用來將暫存區的檔案加到.git目錄下. \n git push \xa0 :將提交的內容推到遠端倉儲加上 -f 會強制push覆蓋掉遠端資料\xa0 \n git pull \xa0 :將遠端較新的資料拉回近端合併, 當push的時候有提示遠端的版本更新時, 請先拉後推, 不要直接使用-f. \n 首先先輸入cd 2019wcmj 隨後再打python wsgi.py\xa0 複製https://127.0.0.1:9443/ \n 進到網頁登錄密碼:admin後便可以開始進行改版 \n \n 改版完成後再透過git\xa0 add . git commit -m"" git push', 'tags': '', 'url': '倉儲改版.html'}, {'title': '上傳youtube影片', 'text': '豪哥二度上場,不料第一球跨步上籃馬上被打了一個大火鍋 \n \n \n 1.選想要放入的影片 \n 2.點選下方分享並點擊"<>"圖案 \n \n \n 3.複製原始碼 \n \n 4 .複製原始碼並貼上倉儲嵌入原始碼處 \n \n', 'tags': '', 'url': '上傳youtube影片.html'}, {'title': 'SSL-VPN服務教學', 'text': '1. 首次使用須先安裝SSL VPN 程式(Juniper Networks Connect) \n (1)請依您的作業系統版本下載使用者端程式： https://drive.narlabs.org.tw/navigate/s/8F663EC143514CF295FCB53B5B228956GUY \n (2)程式下載完成後，點擊兩下開始安裝。 \n \n 2.進行身份驗證(可由Juniper Network Connect或IE，請擇一進行身分認證) \n \n 執行程式後，於"登入頁面"輸入網址 :\xa0 https://sslvpn9.twaren.net/nfu \xa0 ，後按下"執行" \n \n \n 3.輸入使用者帳號密碼，請填入校務行政AD帳號及密碼。請完整填寫您在校務行政AD帳號以及密碼，否則國網中心找不到對象進行身份確認\xa0 \n \n 4.出現"設定控制-警告"視窗，按下"是" \n \n \xa0 \xa05.螢幕右下角顯示"已連接"，表示已成功連線。 \n \n 2-2: IE網認證 \n \n 1.請在IE瀏覽器上按下右鍵 使用"以系統管理員身分執行" \n 登入頁面請輸入：  https://sslvpn9.twaren.net/nfu ，按下「執行」，會出現帳號與密碼登入欄位。 請填入虎尾科技大學的校務行政AD帳號及密碼，並請輸入下方驗證碼，進行身份確認。 請完整填寫您在虎尾科技大學的校務行政AD帳號以及密碼 ，否則國網中心找不到對象進行身份確認！ \n (例:  員工編號或學號@ctx10.nfu.edu.tw ） 填寫完畢以後按下Login登入就會開始進行身份確認，請稍後一段時間。 \n \n \n \n \n \n 2.點選「開始」  \n \n 3.點選「是」，SSL VPN程式安裝完畢後，就會開始跟你的電腦建立連線，請稍後一段時間。 \n \n \n \n \n \n   \n \n   5.  VPN 連線建立完成 \n \n 連線建立完成後，在電腦的工作列上(桌面右下角)，會出現 Juniper Network Connect VPN Client的圖示，表示VPN連線已經成功的建立在你的電腦上了。點擊圖示兩下，即可查看連線資訊。 (註:指派IP:一定為120.113.100.XX) 。 到此，您的SSL-VPN連線已經成功的建立，不管是在家裡還是出差，您的電腦就像在學校使用一般，您可以自由的使用虎尾科技大學自己擁有的網路資源。 \n \n \n \n 6.  連線IP檢視 (*) \n \n 如何得知連線的 IP 究竟是什麼呢？您可透過網際網路上提供 IP 位址偵測服務的網站進行確認，例如  http://showip.net/ \n \n', 'tags': '', 'url': 'SSL-VPN服務教學.html'}, {'title': '校園授權軟體', 'text': '學校電算中心網站-下載專區 \n 網址: https://nfucc.nfu.edu.tw/zh/download \xa0 \n 登入學生帳戶後即可到此網頁，可點選自己想要安裝的軟體 \n 但是 下載軟體限定校園IP \n \n', 'tags': '', 'url': '校園授權軟體.html'}, {'title': 'virtualbox', 'text': '到ubuntu網站下載Sever \n ubuntu網站: https://www.ubuntu.com/ \n \n 1.建立 Ubuntu 18.04 虛擬主機 \n \n \n \n \n \n 3. 以網路卡橋接啟動 Ubuntu\xa0 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n 以  ifconfig  查 Ubuntu 伺服器的 IP, 測試 nginx 伺服器是否可以連線 \n \n 提醒:如果要關機要打指令 sudo halt \n 輸入 sudo apt install nginx 安裝 nginx WWW 伺服器 \n \n 以 Windows 10\xa0 下的 Filezilla client, 將編輯好的 nginx 設定檔案送到 Ubuntu再修改init.py，把檔案裡的False改True，再傳送覆蓋本地檔案 \n \n', 'tags': '', 'url': 'virtualbox.html'}, {'title': 'ubuntu開啟網站', 'text': '啟動，登入後輸入ifconfig查詢虛擬主機IP位址 \n \n 到瀏覽器輸入網址 \n 1.http ://"虛擬主機IP"，進到個人 靜態 網站 \n \n 2.https ://"虛擬主機IP"，進到個人 動態 網站 \n \n', 'tags': '', 'url': 'ubuntu開啟網站.html'}, {'title': '第一個 圖片', 'text': '學習如何一次上傳多個圖檔, 並且學會如何引用, 並且設定圖片大小. \n \n 開啟已下載完成的cd2019_cdb_w5資料夾並啟動 輸入cd tmp cd 2019wcmj python wsgi.py 複製網址並開啟即可進入自己的CMSimfly管理網頁 登入密碼:admin即可登入並且進行編輯 \n 上傳圖片後能調整自己照片的大小編輯完,透過git add . git commit -m"" git push完成改版 \n', 'tags': '', 'url': '第一個 圖片.html'}, {'title': '第二個 骰子遊戲', 'text': "\n \n  Your browser doesn't support the HTML5 element canvas.      Throw dice  \n Stage:   Point:   Outcome:  \n", 'tags': '', 'url': '第二個 骰子遊戲.html'}, {'title': '第三個 亂數系統', 'text': '\n 網路與電腦程式只是工具, 任何人希望與遠端的系統或成員溝通, 可以使用網路. \n 任何人想要利用電腦的能力解決問題, 就必須學會編寫電腦程式, 與電腦溝通. \n Try it \n \n \n  導入 Brython 標準程式庫  \n \n \n \n \n \n  啟動 Brython  \n \n \n \n \n \n \n \n 繪圖 <<  Previous   Next  >> Spur Gears \n  footer  \n \n \n  Link back to Colorlib can\'t be removed. Template is licensed under CC BY 3.0.   Copyright ©\n \nAll rights reserved | This template is made with   by  Colorlib    Link back to Colorlib can\'t be removed. Template is licensed under CC BY 3.0.  \n \n \n  for footer  \n \n  for site wrap  \n \n  <script src="./../static/chimper/js/jquery-3.3.1.min.js"></script>  \n \n \n \n \n \n \n \n \n \n \n \n \n \n            <script src="./../static/chimper/js/typed.js"></script>\n                    <script>\n                    var typed = new Typed(\'.typed-words\', {\n                    strings: ["Web Apps"," WordPress"," Mobile Apps"],\n                    typeSpeed: 80,\n                    backSpeed: 80,\n                    backDelay: 4000,\n                    startDelay: 1000,\n                    loop: true,\n                    showCursor: true\n                    });\n                    </script>\n             \n \n \n \n', 'tags': '', 'url': '第三個 亂數系統.html'}, {'title': '第四個ROC國旗', 'text': '需更改自己倉儲內的flaskapp.py檔才能顯示國旗 \n 以下是需更改的程式碼： \n def savePage（）的修改 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 五 \n 6 \n 7 \n \n \n \n def savePage(): \n \xa0\xa0\xa0\xa0 """save all pages function""" \n \xa0\xa0\xa0\xa0 page_content = request.form[\'page_content\'] \n \xa0\xa0\xa0\xa0 # when element_format : "html", need to remove the annoying comment to prevent brython exec \n \xa0\xa0\xa0\xa0 page_content = [w.replace(\'//  <![CDATA[\', \'\') for w in page_content] \n \xa0\xa0\xa0\xa0 page_content = [w.replace(\'// ]]> \', \'\') for w in page_content] \n \xa0\xa0\xa0\xa0 # check if administrator \n \n \n \n \n \n \n \n def ssavePage（）的修改 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 五 \n 6 \n 7 \n 8 \n \n \n \n def ssavePage(): \n \xa0\xa0\xa0\xa0 """seperate save page function""" \n \xa0\xa0\xa0\xa0 page_content = request.form[\'page_content\'] \n \xa0\xa0\xa0\xa0 # when element_format : "html", need to remove the annoying comment to prevent brython exec \n \xa0\xa0\xa0\xa0 page_content = page_content.replace(\'//  <![CDATA[\', \'\') \n \xa0\xa0\xa0\xa0 page_content = page_content.replace(\'// ]]> \', \'\') \n \xa0\xa0\xa0\xa0 page_order = request.form[\'page_order\'] \n \xa0\xa0\xa0\xa0 if not isAdmin(): \n \n \n \n \n \n \n \n  導入 Brython 標準程式庫  \n \n \n \n  啟動 Brython  \n \n \n \n \n \n <!-- 導入 Brython 標準程式庫 --> \n < script   src = "./../static/brython.js" ></ script > \n < script   src = "./../static/brython_stdlib.js" ></ script > \n < p ></ p > \n <!-- 啟動 Brython --> \n < script >//  <![CDATA[ \n window.onload=function(){ \n // 設定 data/py 為共用程式路徑 \n brython({debug:1, pythonpath:[\'./../data/py\']}); \n } \n // ]]> </ script > \n < p >< canvas   height = "400"   id = "plotarea"   width = "600" ></ canvas ></ p > \n < script   type = "text/python" >//  <![CDATA[ \n # 導入 doc \n from browser import document as doc \n import math \n \xa0 \n # 準備繪圖畫布 \n canvas = doc["plotarea"] \n ctx = canvas.getContext("2d") \n # 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點 \n # ctx.setTransform(1, 0, 0, -1, 0, canvas.height) \n # 以下採用 canvas 原始座標繪圖 \n flag_w = canvas.width \n flag_h = canvas.height \n circle_x = flag_w/4 \n circle_y = flag_h/4 \n # 先畫滿地紅 \n ctx.fillStyle=\'rgb(255, 0, 0)\' \n ctx.fillRect(0,0,flag_w,flag_h) \n # 再畫青天 \n ctx.fillStyle=\'rgb(0, 0, 150)\' \n ctx.fillRect(0,0,flag_w/2,flag_h/2) \n # 畫十二道光芒白日 \n ctx.beginPath() \n star_radius = flag_w/8 \n angle = 0 \n for i in range(24): \n \xa0\xa0\xa0\xa0 angle += 5*math.pi*2/12 \n \xa0\xa0\xa0\xa0 toX = circle_x + math.cos(angle)*star_radius \n \xa0\xa0\xa0\xa0 toY = circle_y + math.sin(angle)*star_radius \n \xa0\xa0\xa0\xa0 # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo \n \xa0\xa0\xa0\xa0 if (i): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ctx.lineTo(toX, toY) \n \xa0\xa0\xa0\xa0 else: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ctx.moveTo(toX, toY) \n ctx.closePath() \n # 將填色設為白色 \n ctx.fillStyle = \'#fff\' \n ctx.fill() \n # 白日:藍圈 \n ctx.beginPath() \n ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True) \n ctx.closePath() \n # 填色設為藍色 \n ctx.fillStyle = \'rgb(0, 0, 149)\' \n ctx.fill() \n # 白日:白心 \n ctx.beginPath() \n ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True) \n ctx.closePath() \n # 填色設為白色 \n ctx.fillStyle = \'#fff\' \n ctx.fill() \n // ]]> </ script > \n', 'tags': '', 'url': '第四個ROC國旗.html'}, {'title': '第五個3D物件', 'text': '\n \n', 'tags': '', 'url': '第五個3D物件.html'}, {'title': '3D成品', 'text': '\n \n \n', 'tags': '', 'url': '3D成品.html'}, {'title': '作法', 'text': '1.先做出自己想要的物件 \n \n 2.存檔後轉檔成Ascii Stereolithography(.stl) \n \n 3.上傳至自己的動態網頁(File upload)然後於(File list) 開啟檔案便複製後段網址 \n \n \n 4.打入<p><iframe width="900" height="900" src="./../static/viewstl.html?src=./../downloads/3d.stl.stl"><iframe></iframe></iframe></p> \n 存檔後即完成 \n', 'tags': '', 'url': '作法.html'}, {'title': '示範影片', 'text': '', 'tags': '', 'url': '示範影片.html'}, {'title': '如何建立倉儲', 'text': '\n', 'tags': '', 'url': '如何建立倉儲.html'}, {'title': '啟用 Github Pages 與 CMSimfly', 'text': '\n', 'tags': '', 'url': '啟用 Github Pages 與 CMSimfly.html'}, {'title': 'Clone Github 倉儲', 'text': '以 scrum-1 帳號為例, 若採 ssh clone 倉儲, 需要先設定對應權限. 從 \xa0 https://github.com/scrum-1/cd2019 \xa0 倉儲中對應的 clone or downloads 中 Clone with SSH, 所列出的 URL 為: \xa0\xa0\xa0 git@github.com:scrum-1/cd2019.git 表示將以 git 帳號, 登入 github.com 主機, 進入 scrum-1 帳號中對應的 cd2019 倉儲, 若直接 git clone 此一倉儲, 則指令為: \xa0\xa0\xa0 git clone git@github.com:scrum-1/cd2019.git 特別注意, 其中的 github.com 為網站符號名稱, 意思是所採用的 ssh 將利用 @ 前方的 git 當作帳號, 並且將採用 ssh 協定登入 github.com 網站. 假如, 使用者所採用的可攜程式套件, 只在 home 目錄下的 .ssh 目錄登記一個 private key, 使用者就可以直接在 home/.ssh/config 中,將 github.com 當作 Host 代號, 並對應到 Hostname 為 github.com 作為連線的網站名稱. 但是, 若使用者所使用的可攜程式套件, 登錄一個以上的 private keys 時, 就必須透過一個以上不同的 Host 名稱加以區別, 以便導引 ssh 協定至不同區段, 以不同的 private key 對應 Github 上不同帳號下所登錄的 public key. \n', 'tags': '', 'url': 'Clone Github 倉儲.html'}, {'title': '建立 OpenSSH 格式的 Private 與 Public Keys', 'text': '接下來, 在可攜系統的命令列視窗中, 以 sh 執行 Git 的 shell, 使用 建立金鑰命令:ssh-keygen -t rsa -b 4096 -C "註解" 建立位於 y:\\home\\.ssh\\id_rsa 的 Private Key 與位於 y:\\home\\.ssh\\id_rsa.pub 的 Public Key, 並且將 id_rsa.pub 的內容, 轉貼到 Github 帳號 settings 中 SSH and GPG keys 項目內的 SSH Public Key 區. 使用 ssh 協定執行 git clone 為了採用 OpenSSH 協定執行登入認證, 使用者在近端 git clone 倉儲時, 必須使用類似 git@github.com:帳號/倉儲.git 的連線 URL \n \n  for site wrap  \n \n  <script src="../static/chimper/js/jquery-3.3.1.min.js"></script>  \n \n \n \n \n \n \n \n \n \n \n \n            <script src="./../static/chimper/js/typed.js"></script>\n                    <script>\n                    var typed = new Typed(\'.typed-words\', {\n                    strings: ["Web Apps"," WordPress"," Mobile Apps"],\n                    typeSpeed: 80,\n                    backSpeed: 80,\n                    backDelay: 4000,\n                    startDelay: 1000,\n                    loop: true,\n                    showCursor: true\n                    });\n                    </script>\n             \n', 'tags': '', 'url': '建立 OpenSSH 格式的 Private 與 Public Keys.html'}, {'title': '期中報告影片', 'text': '介紹第一到八周網際內容管理所做的成果影片 \n \n 第1-8周主要教學網站:網際內容管理網誌、2019 Spring網際內容管理 \n 電腦初學者的網際內容管理(1-8周上課目標) \n 1.了解網路連線設定 \n 2.下載可攜式環境(2019_cdb_w5.7z) \n 3.建立github倉儲，並理解改版時指令的用意(git add .、git commit -m ""、git push) \n 4.利用CMSimfly內容，建立自己的Github Pages網站 \n 5.學習如何使用CMSimfly，在網站中加入內容，並進行改版 \n 示範如何開啟網站 開啟已下載完成的cd2019_cdb_w5資料夾並啟動 輸入cd tmp cd 2019wcmj python wsgi.py 複製網址並開啟即可進入自己的CMSimfly管理網頁 登入密碼:admin即可登入並且進行編輯 <產生亂數1-51>就是示範在網頁裡新增內容 透過輸入程式碼及文字可以新增內容 新增完內容後可點擊右上角選項generate_pages轉為靜態網頁 \n 並且牢記每次經過新增內容後必須利用指令進行改版(git add .、git commit -m ""、git push) 透過登入github可以看到自己的網頁過去改版新增的內容', 'tags': '', 'url': '期中報告影片.html'}]};