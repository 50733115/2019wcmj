var tipuesearch = {"pages": [{'title': '☆網際內容管理★', 'text': '\n 網際內容管理 \n 2019 Spring 課程目標 \n 讓學員得以利用全球資訊網發表與 (精密) 機械 (設計) 相關的內容, 並進行有效管理. \n 內容發表: Google Blogger, Github Pages 有效管理: 透過 API 程式整合兩者之間的內容, 包括 CMSimfly, Reveal 與 Pelican Blog 與 Blogger \n', 'tags': '', 'url': '☆網際內容管理★.html'}, {'title': '介紹', 'text': '', 'tags': '', 'url': '介紹.html'}, {'title': 'git add', 'text': '可以用來新增一個檔案, 數個檔案, 或在之前提交後所新增的所有內容. \n 在 GIT 架構下, 是對所新增或修改的內容拍快照。', 'tags': '', 'url': 'git add.html'}, {'title': 'git commit', 'text': '執行之前, 必須使用 git config 建立臨時或永久的身分註記, 因為 GIT 在展開所有改版內容時, 必須明確登錄這些變更的作者與時間. 當使用者採用 git commit -m "改版說明訊息", 此次提交到 .git 目錄下的更動內容, 均會綁定使用者身分與改版所輸入的說明訊息. \n', 'tags': '', 'url': 'git commit.html'}, {'title': 'git push', 'text': '在隨後沒有輸入遠端 URL 代號時, 表示要推送到 origin, 若透過 git remote add 設定其他代號與 URL 對應時, git push 加上代號, 就可以將此次的提交內容, 推送到指定的 URL 所在遠端倉儲. \n \n', 'tags': '', 'url': 'git push.html'}, {'title': '網路連線設定', 'text': '了解機械設計系電腦輔助設計室電腦的網路設定, 其中包括 IPv4 網路與 IPv6 網路設定. 正常情況下, 電腦輔助設計室中的 64 台電腦透過 IPv4 協定下的 DHCP 與 NAT 上網, 各電腦以 DHCP client 取得 192.168.1.* 的網路位址, 然後以 NAT 的一組外部 IP 上網, 通常必須設定 Proxy Server 為 http://proxy.kmol.info:3128 後上網會比較順暢, 但若 8 台 Proxy Servers 無法正常運作時, 則取消 Proxy Server 的設定. 瀏覽器代理主機設定 了解如何設定 Google Chrome 與 Firefox 瀏覽器的代理主機設定. \n 可以利用"命令提示字元"輸入 ipconfig" 它的主要功用，包括用來顯示現時網路連線的設定（/all參數），或透過/release參數來釋放取得的ip位置，和透過/renew 來重新獲取ip位置的分配。 \n \n \n', 'tags': '', 'url': '網路連線設定.html'}, {'title': 'IP位址', 'text': '（IP Address）每一台電腦都必需要有唯一的IP位址（例如：74.125.153.104為google台灣的網址）才能上網。如果使用錯誤的IP位址，則可能會導致無法連線，也可能造成別的電腦無法連線。所以，IP位址一定要經過申請的程序取得合法且唯一的位址。 \n \n', 'tags': '', 'url': 'IP位址.html'}, {'title': 'DNS伺服器', 'text': '（DNS Server）：所謂的DNS (Domain Name System網域名稱系統)簡單的說就是把網域名稱翻譯成IP位址(也可以逆向操作)，例如：將 www.google.com.tw \xa0 的網址翻譯成IP為74.125.153.104，因為網域名稱是用英文組成，會讓人容易記憶，但是IP位址一串毫無意義的數字，非常不容易記憶。 \n \n \n', 'tags': '', 'url': 'DNS伺服器.html'}, {'title': '配置可攜程式環境', 'text': '取得 Windows 10 64 位元環境下的可攜程式環境 (下載\xa0 2019_cdb_w5.7z), 下載後解開目錄, 放入 USB3.0 規格以上的隨身碟或隨身硬碟. 以滑鼠點擊 start.bat 開啟可攜隨身系統, 以 stop.bat 關閉可攜隨身系統,  隨身碟必須在關閉所有應用程式執行下, 才可正常退出. 了解基本的 DOS (Disk Operating System) 指令 C:\\> 符號為 DOS 命令列視窗的回應 , 表示目前在 C 槽硬碟的 \\ 根目錄, 若要切換到 Y 槽, 則在電腦的回應後, 輸入 Y:, 命令列將轉為 Y:\\> 若要 更換目錄 , 則使用  cd ,例如: \xa0 Y:\\>cd tmp 表示要從 Y 槽的根目錄更換到 tmp 目錄, 也就是\xa0 Y:\\tmp> 若要再回到 Y 槽的根目錄, 可以使用 cd .. 表示要從目前所在目錄, 往上跳回一個目錄, 也就是重新回到 Y 槽的根目錄. 另外, 無論目前位於哪一個子目錄, 也可以使用 cd \\ 直接回到根目錄. 或者從  Y:\\> 直接使用 cd \\tmp\\repo\\ssh\\wcm2019 直接從 Y 槽的根目錄, 跳進 Y:\\tmp\\repo\\ssh\\wcm2019> 此外, 常用的 DOS 指令有: dir  - 列出目前所在目錄的內容 mkdir \xa0- 隨後加上要建立目錄的名稱, 可以建立目錄 \n cls \xa0-清除目前的命令列顯示的內容 \n', 'tags': '', 'url': '配置可攜程式環境.html'}, {'title': '倉儲改版', 'text': '建立 Git 倉儲, 並 clone 倉儲至近端工作後, 對遠端倉儲改版 可攜程式系統中已經內建 git, 可以在啟動 start.bat 後, 透過 path 的設定, 直接執行 git 指令. 建立 Git 倉儲, 共分為兩類, 一類是直接在 Github 網際介面下建立倉儲時, 要求建立 README.md 檔案, 之後可以直接在近端, 以 git clone 加上倉儲連線 URL, 將倉儲克隆一份到近端, 並以最新版本作為工作目錄, 使用者改版後, 可以直接透過 git add, commit 與 push 對遠端倉儲改版. 另一類則是故意在 Github 網際介面下建立倉儲時, 不要建立任何檔案, 而是在近端自行利用 git 指令建立倉儲架構, 新增內容後, 以 git remote add 設法在近端倉儲中納入 origin URL 後, 將近端倉儲版本新增提交推送到遠端. git add \xa0可以用來新增一個檔案, 數個檔案, 或在之前提交後所新增的所有內容. git add 在 GIT 架構下, 是對所新增或修改的內容拍快照: git commit\xa0 \xa0執行之前, 必須使用 git config 建立臨時或永久的身分註記, 因為 GIT 在展開所有改版內容時, 必須明確登錄這些變更的作者與時間. 當使用者採用 git commit -m "改版說明訊息", 此次提交到 .git 目錄下的更動內容, 均會綁定使用者身分與改版所輸入的說明訊息. git push \xa0在隨後沒有輸入遠端 URL 代號時, 表示要推送到 origin, 若透過 git remote add 設定其他代號與 URL 對應時, git push 加上代號, 就可以將此次的提交內容, 推送到指定的 URL 所在遠端倉儲.\xa0\xa0 \n 利用 CMSimfly (https://github.com/chiamingyen/cmsimfly) 內容, 建立自己的 Github Pages 網站', 'tags': '', 'url': '倉儲改版.html'}, {'title': '第一個 圖片', 'text': '學習如何一次上傳多個圖檔, 並且學會如何引用, 並且設定圖片大小. \n \n 開啟已下載完成的cd2019_cdb_w5資料夾並啟動 輸入cd tmp cd 2019wcmj python wsgi.py 複製網址並開啟即可進入自己的CMSimfly管理網頁 登入密碼:admin即可登入並且進行編輯 \n 上傳圖片後能調整自己照片的大小編輯完,透過git add . git commit -m"" git push完成改版 \n', 'tags': '', 'url': '第一個 圖片.html'}, {'title': '第二個 骰子遊戲', 'text': "\n \n  Your browser doesn't support the HTML5 element canvas.      Throw dice  \n Stage:   Point:   Outcome:  \n", 'tags': '', 'url': '第二個 骰子遊戲.html'}, {'title': '第三個 亂數系統', 'text': '\n 網路與電腦程式只是工具, 任何人希望與遠端的系統或成員溝通, 可以使用網路. \n 任何人想要利用電腦的能力解決問題, 就必須學會編寫電腦程式, 與電腦溝通. \n Try it \n \n \n', 'tags': '', 'url': '第三個 亂數系統.html'}, {'title': '期中報告影片', 'text': '介紹第一到八周網際內容管理所做的成果影片 \n \n 第1-8周主要教學網站:網際內容管理網誌、2019 Spring網際內容管理 \n 電腦初學者的網際內容管理(1-8周上課目標) \n 1.了解網路連線設定 \n 2.下載可攜式環境(2019_cdb_w5.7z) \n 3.建立github倉儲，並理解改版時指令的用意(git add .、git commit -m ""、git push) \n 4.利用CMSimfly內容，建立自己的Github Pages網站 \n 5.學習如何使用CMSimfly，在網站中加入內容，並進行改版 \n 示範如何開啟網站 開啟已下載完成的cd2019_cdb_w5資料夾並啟動 輸入cd tmp cd 2019wcmj python wsgi.py 複製網址並開啟即可進入自己的CMSimfly管理網頁 登入密碼:admin即可登入並且進行編輯 <產生亂數1-51>就是示範在網頁裡新增內容 透過輸入程式碼及文字可以新增內容 新增完內容後可點擊右上角選項generate_pages轉為靜態網頁 \n 並且牢記每次經過新增內容後必須利用指令進行改版(git add .、git commit -m ""、git push) 透過登入github可以看到自己的網頁過去改版新增的內容', 'tags': '', 'url': '期中報告影片.html'}]};